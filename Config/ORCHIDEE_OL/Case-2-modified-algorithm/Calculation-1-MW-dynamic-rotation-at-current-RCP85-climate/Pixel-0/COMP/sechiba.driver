#!/bin/ksh

#D- Driver du script pour SECHIBA

#-----------------------------------------------------------------
function SRF_Initialize
{
    IGCM_debug_PushStack "SRF_Initialize"

    IGCM_debug_PopStack "SRF_Initialize"
}

#-----------------------------------------------------------------
function SRF_Update
{
    IGCM_debug_PushStack "SRF_Update"

    # Set STOMATE_OK_STOMATE=y in run.def if SBG is activated in config.card
    if [ X${config_ListOfComponents_SBG} = Xstomate ] ; then
        IGCM_comp_modifyDefFile blocker run.def STOMATE_OK_STOMATE y
    else
	IGCM_comp_modifyDefFile blocker run.def STOMATE_OK_STOMATE n
    fi

    # Set default values for sechiba1_enabled and sechiba1_freq.
    # These variables are used only to modify file_def_orchidee.xml if XIOS=y
    sechiba1_enabled=.FALSE.
    sechiba2_enabled=.FALSE.
    sechiba1_freq=0s

    if [ X${orchidee_ol_UserChoices_XIOS} = Xy ] ; then
      # Activate XIOS output
      IGCM_comp_modifyDefFile nonblocker run.def XIOS_ORCHIDEE_OK y
      # Deactivate IOIPSL output
      IGCM_comp_modifyDefFile nonblocker run.def WRITE_STEP 0
    else
      # Deactivate XIOS output
      IGCM_comp_modifyDefFile nonblocker run.def XIOS_ORCHIDEE_OK n
    fi

    # Get WriteFrenquecies from config.card for SECHIBA
    # Note that it is only possible to have one HF and one other option. 
    # If more options are set in config.card only the latest will be used.
    for frequency in ${config_SRF_WriteFrequency} ; do
	case ${frequency} in
	    *Y|*y) 
		NbYears=$( echo ${frequency} | awk -F '[yY]' '{print $1}' )
		NbDaysYear=$( IGCM_date_DaysInYear ${year} )
		sechiba1_enabled=.TRUE.
		sechiba1_freq=${NbYears}y
		(( SECHIBA_WRITE_STEP = NbYears * NbDaysYear * 86400 )) ;;
	    *M|*m)
		NbMonths=$( echo ${frequency} | awk -F '[mM]' '{print $1}' )
		sechiba1_enabled=.TRUE.
		sechiba1_freq=${NbMonths}mo
		# Note only 1M possible with IOIPSL!
		SECHIBA_WRITE_STEP=-1. ;;
	    *D|*d)
		NbDays=$( echo ${frequency} | awk -F '[dD]' '{print $1}' )
		sechiba1_enabled=.TRUE.
		sechiba1_freq=${NbDays}d
 		(( SECHIBA_WRITE_STEP = NbDays * 86400 )) ;;
	    *s)
		WriteInSeconds=$( echo ${frequency} | awk -F '[s]' '{print $1}' )
		sechiba1_enabled=.TRUE.
		sechiba1_freq=${WriteInSeconds}s
		(( SECHIBA_WRITE_STEP = WriteInSeconds )) ;;
            HF|hf) 
		sechiba2_enabled=.TRUE. ;;
	    *) 
		IGCM_debug_Exit "SRF_Update " ${frequency} " invalid WriteFrequency : choose in xY, xM, xD, xs and HF" 
		IGCM_debug_Verif_Exit ;;
	esac
    done

    # Set IOIPSL output in run.def. This is done for all cases only to avoid AUTO variables during run time. 
    IGCM_comp_modifyDefFile nonblocker run.def WRITE_STEP ${SECHIBA_WRITE_STEP}

    # Outputs HF in HISTFILE2 if required
    if [ ${sechiba2_enabled} = .TRUE. ] ; then
 	IGCM_comp_modifyDefFile nonblocker run.def SECHIBA_HISTFILE2 y
    else
	IGCM_comp_modifyDefFile nonblocker run.def SECHIBA_HISTFILE2 n
    fi

    # Modify file_def_orchidee.def if XIOS is activated
    if [ X${orchidee_ol_UserChoices_XIOS} = Xy ] ; then
      # Modify file_def_orchidee.xml file
      IGCM_comp_modifyXmlFile nonblocker file_def_orchidee.xml sechiba1 enabled ${sechiba1_enabled}
      IGCM_comp_modifyXmlFile nonblocker file_def_orchidee.xml sechiba1 output_freq ${sechiba1_freq}
      IGCM_comp_modifyXmlFile nonblocker file_def_orchidee.xml sechiba2 enabled ${sechiba2_enabled}
    fi

    # Activate other processes depending on values set in sechiba.card UserChoices section
    IGCM_comp_modifyDefFile nonblocker run.def STOMATE_OK_CO2 ${sechiba_UserChoices_OKCO2}
    IGCM_comp_modifyDefFile nonblocker run.def LAI_MAP ${sechiba_UserChoices_LAIMAP}
    IGCM_comp_modifyDefFile nonblocker run.def RIVER_ROUTING ${sechiba_UserChoices_ROUTING}
    IGCM_comp_modifyDefFile nonblocker run.def HYDROL_CWRR ${sechiba_UserChoices_NEWHYDROL}

    if [ X${sechiba_UserChoices_IMPOSE_VEG} = Xy ] ; then
	# IMPOSE_VEG is activated
	IGCM_comp_modifyDefFile nonblocker run.def IMPOSE_VEG y
	IGCM_comp_modifyDefFile nonblocker run.def VEGET_UPDATE 0Y
    else
	# IMPOSE_VEG is deactivated
	IGCM_comp_modifyDefFile nonblocker run.def IMPOSE_VEG n

        # Modify in run.def VEGET_UPDATE if they are set in sechiba.card section UserChoices
	# VEGET_UPDATE inidcates if the vegetation map should be updated and at which frequency
	if [ ! X${sechiba_UserChoices_VEGET_UPDATE} = X ] ; then
	    # Take the value from sechiba.card
	    IGCM_comp_modifyDefFile nonblocker run.def VEGET_UPDATE   ${sechiba_UserChoices_VEGET_UPDATE}
	else
	    # Set default value 0Y
	    IGCM_comp_modifyDefFile nonblocker run.def VEGET_UPDATE 0Y
	fi
    fi


    if ( [ ${CumulPeriod} -eq 1 ] && [ "${config_SRF_Restart}" = "n" ] ) ; then
	IGCM_comp_modifyDefFile blocker run.def SECHIBA_restart_in NONE

	# Check if running executable teststomate. In that case sechiba restart file is mandatory.
	if [ -f teststomate ] ; then
	    IGCM_debug_Print 1 "Error in launching teststomate !"
	    IGCM_debug_Exit    "YOU MUST USE EXISTING RESTART FILE FOR SECHIBA WITH JOB TESTSTOMATE!" 
	    IGCM_debug_Verif_Exit	    
	fi
    else
	IGCM_comp_modifyDefFile blocker run.def SECHIBA_restart_in sechiba_rest_in.nc
    fi

    # Activate the creation of river_desc.nc file only during the first execution in the simulation.
    if [ ${CumulPeriod} -eq 1 ] ; then
        IGCM_comp_modifyDefFile nonblocker run.def RIVER_DESC y
    else
        IGCM_comp_modifyDefFile nonblocker run.def RIVER_DESC n
    fi

    IGCM_debug_PopStack "SRF_Update"
}

#-----------------------------------------------------------------
function SRF_Finalize
{
    IGCM_debug_PushStack "SRF_Finalize"

    IGCM_debug_PopStack "SRF_Finalize"
}
